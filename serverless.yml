# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: articlecommentsapi

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "2"

useDotenv: true

custom:
  config:
    functionAppName: FA-articlecommentsapi
    storageName: sa${opt:storageNameSuffix}
    appInsightsName: AI-${self:custom.config.functionAppName}
    servicePlanName: ASP-${opt:resourceGroup, self:custom.config.resourceGroup}
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: azure
  runtime: nodejs12
  # os: windows  # windows is default, linux is available
  # prefix: "sample"  # prefix of generated resource name
  # type: premium  # premium azure functions
  resourceGroup: ${opt:resourceGroup, self:custom.config.resourceGroup}
  subscriptionId: ${opt:subscriptionId, self:custom.config.subscriptionId}
  appServicePlan:
    name: ${self:custom.config.servicePlanName}
    sku:
      tier: Consumption
      name: Y1
  appInsights:
    name: ${self:custom.config.appInsightsName}
  functionApp:
    name: ${self:custom.config.functionAppName}
  storageAccount:
    name: ${self:custom.config.storageName}

  environment: # these will be created as application settings
    GOOGLE_APPLICATION_CREDENTIALS: "${env:GOOGLE_APPLICATION_CREDENTIALS}"

plugins: # look for additional plugins in the community plugins repo: https://github.com/serverless/plugins
  - serverless-azure-functions
  - serverless-webpack

functions:
  createArticleSingleComment:
    handler: src/handlers/createArticleSingleComment.handler
    events:
      - http: true
        methods:
          - POST
        route: "articles/{aid}/comments"
    name: comments-service-production-createArticleSingleComment
  getAllArticleComments:
    handler: src/handlers/getAllArticleComments.handler
    events:
      - http: true
        methods:
          - GET
        route: "articles/{aid}/comments"
    name: comments-service-production-getAllArticleComments
  getArticleSingleComment:
    handler: src/handlers/getArticleSingleComment.handler
    events:
      - http: true
        methods:
          - GET
        route: "articles/{aid}/comments/{id}"
    name: comments-service-production-getArticleSingleComment
  updateArticleSingleComment:
    handler: src/handlers/updateArticleSingleComment.handler
    events:
      - http: true
        methods:
          - PATCH
        route: "articles/{aid}/comments/{id}"
    name: comments-service-production-updateArticleSingleComment
  deleteArticleSingleComment:
    handler: src/handlers/deleteArticleSingleComment.handler
    events:
      - http: true
        methods:
          - DELETE
        route: "articles/{aid}/comments/{id}"
    name: comments-service-production-deleteArticleSingleComment
